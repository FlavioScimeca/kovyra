services:
  app:
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile
      args:
        - DOCKER_BUILDKIT=1
    volumes:
      - ../../server:/usr/src/app/server
      - ../../tsconfig.json:/usr/src/app/tsconfig.json
      - ../../nest-cli.json:/usr/src/app/nest-cli.json
      - ../../package.json:/usr/src/app/package.json
      - ../../bun.lock:/usr/src/app/bun.lock
      - node_modules:/usr/src/app/node_modules
    ports:
      - '4001:4001'
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=kovyra_dev
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/kovyra_dev
      - JWT_SECRET=development_secret_key_change_in_production
      - JWT_EXPIRES_IN=1d
      - APP_URL=http://localhost:4001
      - FRONTEND_URL=http://localhost:4001
      - CORS_ALLOWED_ORIGINS=http://localhost:4001,http://localhost:5050
    user: bun
    command: bun run start:dev
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'wget', '-qO-', 'http://localhost:4001/health']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          memory: 512M
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=kovyra_dev
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - postgres
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  node_modules:
